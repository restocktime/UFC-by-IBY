version: '3.8'

services:
  # UFC Prediction Platform API
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=mongodb://mongodb:27017/ufc_platform
      - REDIS_URL=redis://redis:6379
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
      - INFLUXDB_ORG=ufc-platform
      - INFLUXDB_BUCKET=metrics
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - API_SIGNING_KEY=${API_SIGNING_KEY}
      - SPORTSDATA_IO_API_KEY=${SPORTSDATA_IO_API_KEY}
      - ODDS_API_KEY=${ODDS_API_KEY}
      - ESPN_API_KEY=${ESPN_API_KEY}
      - OXYLABS_USERNAME=${OXYLABS_USERNAME}
      - OXYLABS_PASSWORD=${OXYLABS_PASSWORD}
    depends_on:
      - mongodb
      - redis
      - influxdb
    restart: unless-stopped
    networks:
      - ufc-network

  # Frontend (Nginx serving static files)
  frontend:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./packages/frontend/public:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - ufc-network

  # MongoDB Database
  mongodb:
    image: mongo:7
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=ufc_platform
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    restart: unless-stopped
    networks:
      - ufc-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - ufc-network

  # InfluxDB for metrics
  influxdb:
    image: influxdb:2.7
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=metrics
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_PASSWORD}
      - INFLUXDB_USER=ufc_user
      - INFLUXDB_USER_PASSWORD=${INFLUXDB_USER_PASSWORD}
    volumes:
      - influxdb_data:/var/lib/influxdb2
    restart: unless-stopped
    networks:
      - ufc-network

  # Grafana for monitoring (optional)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - influxdb
    restart: unless-stopped
    networks:
      - ufc-network

volumes:
  mongodb_data:
  redis_data:
  influxdb_data:
  grafana_data:

networks:
  ufc-network:
    driver: bridge